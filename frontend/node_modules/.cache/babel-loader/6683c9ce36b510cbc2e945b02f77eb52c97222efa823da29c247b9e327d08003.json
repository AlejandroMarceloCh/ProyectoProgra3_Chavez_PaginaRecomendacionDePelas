{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5050'; // URL base para el backend\n\n// Instancia de Axios para manejar solicitudes con cookies\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // Asegura que las cookies se envíen y gestionen automáticamente\n});\n\n// Buscar películas por query\nexport const searchMovies = async query => {\n  try {\n    const response = await apiClient.post('/search', {\n      query\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error al buscar películas:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// Obtener recomendaciones\nexport const getRecommendations = async username => {\n  try {\n    const response = await apiClient.get('/recommendations', {\n      data: {\n        username\n      } // Incluye el nombre de usuario\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error al obtener recomendaciones:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// Obtener lista de películas para \"ver más tarde\"\nexport const getWatchLater = async () => {\n  try {\n    const response = await apiClient.get('/watchlater');\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Error al obtener lista de 'Ver más tarde':\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\n\n// Marcar película como \"Me gusta\"\nexport const likeMovie = async movieId => {\n  try {\n    const response = await apiClient.post('/likeMovie', {\n      movieId\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error('Error al marcar como \"Me gusta\":', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\n\n// Agregar película a \"Ver más tarde\"\nexport const watchLaterMovie = async movieId => {\n  try {\n    const response = await apiClient.post('/watchLaterMovie', {\n      movieId\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error('Error al agregar a \"Ver más tarde\":', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","apiClient","create","baseURL","headers","withCredentials","searchMovies","query","response","post","data","error","_error$response","console","message","getRecommendations","username","get","_error$response2","getWatchLater","_error$response3","likeMovie","movieId","_error$response4","watchLaterMovie","_error$response5"],"sources":["/Users/alejandromarcelo/Desktop/proyecto-streaming/frontend/src/api/movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5050'; // URL base para el backend\n\n// Instancia de Axios para manejar solicitudes con cookies\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true, // Asegura que las cookies se envíen y gestionen automáticamente\n});\n\n// Buscar películas por query\nexport const searchMovies = async (query) => {\n  try {\n    const response = await apiClient.post('/search', { query });\n    return response.data;\n  } catch (error) {\n    console.error('Error al buscar películas:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Obtener recomendaciones\nexport const getRecommendations = async (username) => {\n    try {\n        const response = await apiClient.get('/recommendations', {\n            data: { username }, // Incluye el nombre de usuario\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error al obtener recomendaciones:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\n\n// Obtener lista de películas para \"ver más tarde\"\nexport const getWatchLater = async () => {\n  try {\n    const response = await apiClient.get('/watchlater');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener lista de 'Ver más tarde':\", error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Marcar película como \"Me gusta\"\nexport const likeMovie = async (movieId) => {\n  try {\n    const response = await apiClient.post('/likeMovie', { movieId });\n    return response.data;\n  } catch (error) {\n    console.error('Error al marcar como \"Me gusta\":', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Agregar película a \"Ver más tarde\"\nexport const watchLaterMovie = async (movieId) => {\n  try {\n    const response = await apiClient.post('/watchLaterMovie', { movieId });\n    return response.data;\n  } catch (error) {\n    console.error('Error al agregar a \"Ver más tarde\":', error.response?.data || error.message);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
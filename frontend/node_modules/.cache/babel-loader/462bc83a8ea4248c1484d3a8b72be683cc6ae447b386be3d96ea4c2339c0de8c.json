{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5050';\n\n// Instancia de Axios para manejar solicitudes con cookies\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // Asegura que las cookies se envíen y gestionen automáticamente\n});\n\n// Buscar películas por query\nexport const searchMovies = async query => {\n  try {\n    const response = await apiClient.post('/search', {\n      query\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error al buscar películas:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// Obtener recomendaciones\nexport const getRecommendations = async () => {\n  try {\n    const response = await apiClient.get('/recommendations');\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error al obtener recomendaciones:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// Obtener lista de películas para \"ver más tarde\"\nexport const getWatchLater = async () => {\n  try {\n    const response = await apiClient.get('/watchlater');\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Error al obtener lista de 'Ver más tarde':\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\nexport async function likeMovie(movieId) {\n  const response = await fetch(`${API_URL}/likeMovie`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      movieId\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Error al marcar como \"Me gusta\"');\n  }\n  return await response.json();\n}\nexport async function watchLaterMovie(movieId) {\n  const response = await fetch(`${API_URL}/watchLaterMovie`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      movieId\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Error al agregar a \"Ver más tarde\"');\n  }\n  return await response.json();\n}","map":{"version":3,"names":["axios","API_BASE_URL","apiClient","create","baseURL","headers","withCredentials","searchMovies","query","response","post","data","error","_error$response","console","message","getRecommendations","get","_error$response2","getWatchLater","_error$response3","likeMovie","movieId","fetch","API_URL","method","body","JSON","stringify","ok","Error","json","watchLaterMovie"],"sources":["/Users/alejandromarcelo/Desktop/proyecto-streaming/frontend/src/api/movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5050';\n\n// Instancia de Axios para manejar solicitudes con cookies\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true, // Asegura que las cookies se envíen y gestionen automáticamente\n});\n\n// Buscar películas por query\nexport const searchMovies = async (query) => {\n  try {\n    const response = await apiClient.post('/search', { query });\n    return response.data;\n  } catch (error) {\n    console.error('Error al buscar películas:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Obtener recomendaciones\nexport const getRecommendations = async () => {\n  try {\n    const response = await apiClient.get('/recommendations');\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener recomendaciones:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Obtener lista de películas para \"ver más tarde\"\nexport const getWatchLater = async () => {\n  try {\n    const response = await apiClient.get('/watchlater');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener lista de 'Ver más tarde':\", error.response?.data || error.message);\n    throw error;\n  }\n};\n\n\nexport async function likeMovie(movieId) {\n    const response = await fetch(`${API_URL}/likeMovie`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ movieId }),\n    });\n\n    if (!response.ok) {\n        throw new Error('Error al marcar como \"Me gusta\"');\n    }\n    return await response.json();\n}\n\nexport async function watchLaterMovie(movieId) {\n    const response = await fetch(`${API_URL}/watchLaterMovie`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ movieId }),\n    });\n\n    if (!response.ok) {\n        throw new Error('Error al agregar a \"Ver más tarde\"');\n    }\n    return await response.json();\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
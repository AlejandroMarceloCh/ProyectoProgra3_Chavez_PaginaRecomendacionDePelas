{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5050';\n\n// Instancia de Axios para solicitudes de autenticación\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // Asegura que las cookies se envíen y gestionen automáticamente\n});\n\n// Función para iniciar sesión\nexport const login = async (username, password) => {\n  if (!username || !password) {\n    throw new Error('El usuario y la contraseña son obligatorios');\n  }\n  try {\n    const response = await apiClient.post('/login', {\n      username,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('Error al iniciar sesión:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Error al iniciar sesión');\n  }\n};\n\n// Función para registrarse\nexport const register = async (username, password) => {\n  if (!username || !password) {\n    throw new Error('El usuario y la contraseña son obligatorios');\n  }\n  try {\n    const response = await apiClient.post('/register', {\n      username,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response4, _error$response4$data;\n    console.error('Error al registrar usuario:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Error al registrar usuario');\n  }\n};","map":{"version":3,"names":["axios","API_URL","apiClient","create","baseURL","headers","withCredentials","login","username","password","Error","response","post","data","error","_error$response","_error$response2","_error$response2$data","console","message","register","_error$response3","_error$response4","_error$response4$data"],"sources":["/Users/alejandromarcelo/Desktop/proyecto-streaming/frontend/src/api/auth.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5050';\n\n// Instancia de Axios para solicitudes de autenticación\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true, // Asegura que las cookies se envíen y gestionen automáticamente\n});\n\n// Función para iniciar sesión\nexport const login = async (username, password) => {\n  if (!username || !password) {\n    throw new Error('El usuario y la contraseña son obligatorios');\n  }\n\n  try {\n    const response = await apiClient.post('/login', { username, password });\n    return response.data;\n  } catch (error) {\n    console.error('Error al iniciar sesión:', error.response?.data || error.message);\n    throw new Error(error.response?.data?.error || 'Error al iniciar sesión');\n  }\n};\n\n// Función para registrarse\nexport const register = async (username, password) => {\n  if (!username || !password) {\n    throw new Error('El usuario y la contraseña son obligatorios');\n  }\n\n  try {\n    const response = await apiClient.post('/register', { username, password });\n    return response.data;\n  } catch (error) {\n    console.error('Error al registrar usuario:', error.response?.data || error.message);\n    throw new Error(error.response?.data?.error || 'Error al registrar usuario');\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI,CAACD,QAAQ,IAAI,CAACC,QAAQ,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACU,IAAI,CAAC,QAAQ,EAAE;MAAEJ,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACvE,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACdC,OAAO,CAACJ,KAAK,CAAC,0BAA0B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACK,OAAO,CAAC;IAChF,MAAM,IAAIT,KAAK,CAAC,EAAAM,gBAAA,GAAAF,KAAK,CAACH,QAAQ,cAAAK,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBH,IAAI,cAAAI,qBAAA,uBAApBA,qBAAA,CAAsBH,KAAK,KAAI,yBAAyB,CAAC;EAC3E;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,QAAQ,GAAG,MAAAA,CAAOZ,QAAQ,EAAEC,QAAQ,KAAK;EACpD,IAAI,CAACD,QAAQ,IAAI,CAACC,QAAQ,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACU,IAAI,CAAC,WAAW,EAAE;MAAEJ,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC1E,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAO,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACdL,OAAO,CAACJ,KAAK,CAAC,6BAA6B,EAAE,EAAAO,gBAAA,GAAAP,KAAK,CAACH,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBR,IAAI,KAAIC,KAAK,CAACK,OAAO,CAAC;IACnF,MAAM,IAAIT,KAAK,CAAC,EAAAY,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBT,IAAI,cAAAU,qBAAA,uBAApBA,qBAAA,CAAsBT,KAAK,KAAI,4BAA4B,CAAC;EAC9E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
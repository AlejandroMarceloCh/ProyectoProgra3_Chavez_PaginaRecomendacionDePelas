{"ast":null,"code":"// src/api/auth.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5050';\n\n// Instancia centralizada de axios con configuración básica\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para manejo global de errores (opcional)\napiClient.interceptors.response.use(response => response, error => {\n  console.error(\"Error en la API:\", error.response ? error.response.data : error.message);\n  return Promise.reject(error);\n});\n\n// Función para iniciar sesión\nexport const login = async (username, password) => {\n  try {\n    const response = await apiClient.post('/login', {\n      username,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error(\"Error al iniciar sesión:\", error.response ? error.response.data : error.message);\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error al iniciar sesión\");\n  }\n};\n\n// Función para registrarse\nexport const register = async (username, password) => {\n  try {\n    const response = await apiClient.post('/register', {\n      username,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error(\"Error al registrar usuario:\", error.response ? error.response.data : error.message);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error al registrar usuario\");\n  }\n};","map":{"version":3,"names":["axios","API_URL","apiClient","create","baseURL","headers","interceptors","response","use","error","console","data","message","Promise","reject","login","username","password","post","_error$response","_error$response$data","Error","register","_error$response2","_error$response2$data"],"sources":["/Users/alejandromarcelo/Desktop/proyecto-streaming/frontend/src/api/auth.js"],"sourcesContent":["// src/api/auth.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:5050';\n\n// Instancia centralizada de axios con configuración básica\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Interceptor para manejo global de errores (opcional)\napiClient.interceptors.response.use(\n  response => response,\n  error => {\n    console.error(\"Error en la API:\", error.response ? error.response.data : error.message);\n    return Promise.reject(error);\n  }\n);\n\n// Función para iniciar sesión\nexport const login = async (username, password) => {\n  try {\n    const response = await apiClient.post('/login', { username, password });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al iniciar sesión:\", error.response ? error.response.data : error.message);\n    throw new Error(error.response?.data?.message || \"Error al iniciar sesión\");\n  }\n};\n\n// Función para registrarse\nexport const register = async (username, password) => {\n  try {\n    const response = await apiClient.post('/register', { username, password });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al registrar usuario:\", error.response ? error.response.data : error.message);\n    throw new Error(error.response?.data?.message || \"Error al registrar usuario\");\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,SAAS,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CACjCD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACF,QAAQ,GAAGE,KAAK,CAACF,QAAQ,CAACI,IAAI,GAAGF,KAAK,CAACG,OAAO,CAAC;EACvF,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMM,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAML,SAAS,CAACgB,IAAI,CAAC,QAAQ,EAAE;MAAEF,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACvE,OAAOV,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOF,KAAK,EAAE;IAAA,IAAAU,eAAA,EAAAC,oBAAA;IACdV,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACF,QAAQ,GAAGE,KAAK,CAACF,QAAQ,CAACI,IAAI,GAAGF,KAAK,CAACG,OAAO,CAAC;IAC/F,MAAM,IAAIS,KAAK,CAAC,EAAAF,eAAA,GAAAV,KAAK,CAACF,QAAQ,cAAAY,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBR,IAAI,cAAAS,oBAAA,uBAApBA,oBAAA,CAAsBR,OAAO,KAAI,yBAAyB,CAAC;EAC7E;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,QAAQ,GAAG,MAAAA,CAAON,QAAQ,EAAEC,QAAQ,KAAK;EACpD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAML,SAAS,CAACgB,IAAI,CAAC,WAAW,EAAE;MAAEF,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC1E,OAAOV,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOF,KAAK,EAAE;IAAA,IAAAc,gBAAA,EAAAC,qBAAA;IACdd,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACF,QAAQ,GAAGE,KAAK,CAACF,QAAQ,CAACI,IAAI,GAAGF,KAAK,CAACG,OAAO,CAAC;IAClG,MAAM,IAAIS,KAAK,CAAC,EAAAE,gBAAA,GAAAd,KAAK,CAACF,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBZ,IAAI,cAAAa,qBAAA,uBAApBA,qBAAA,CAAsBZ,OAAO,KAAI,4BAA4B,CAAC;EAChF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}